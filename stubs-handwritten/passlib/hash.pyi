from typing import Optional

class bcrypt:
    @classmethod
    def using(
        cls, *, relaxed: bool = False, rounds: Optional[int] = None
    ) -> "bcrypt": ...
    @classmethod
    def identify(cls, encoded_reference_hash: bytes) -> str: ...
    @classmethod
    def verify(cls, encoded_cleartext: int, encoded_reference_hash: str) -> None: ...
    @classmethod
    def encrypt(cls, encoded_cleartext: str) -> None: ...
    @classmethod
    def hash(cls, text: str) -> str: ...

class md5_crypt:
    @classmethod
    def using(
        cls, relaxed: bool = False, rounds: Optional[int] = None
    ) -> "md5_crypt": ...
    @classmethod
    def identify(cls, encoded_reference_hash: bytes) -> str: ...
    @classmethod
    def verify(cls, encoded_cleartext: str, encoded_reference_hash: str) -> None: ...
    @classmethod
    def encrypt(cls, encoded_cleartext: str) -> None: ...
    @classmethod
    def hash(cls, text: str) -> str: ...
