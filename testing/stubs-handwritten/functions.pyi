from typing import overload

from .decorators import identity_decorator

def matching(foo: int, bar: str) -> str: ...
def additional_args(foo: int, bar: int) -> str: ...
def additional_optional_args(foo: int, bar: int = 0) -> str: ...
@overload
def overloaded_additional_args(foo: str, bar: str) -> str: ...
@overload
def overloaded_additional_args(foo: int, bar: int) -> int: ...
@overload
def overloaded_additional_optional_args(foo: str, bar: str = "overloaded") -> str: ...
@overload
def overloaded_additional_optional_args(foo: int, bar: int = 0) -> int: ...

@identity_decorator
def decorated_function(foo: str) -> str: ...

@identity_decorator
def decorated_with_additional_args(foo: int, bar: str) -> str: ...

@identity_decorator
def decorated_with_additional_optional_args(foo: int, bar: int = 0) -> str: ...
