# Stubs for passlib.exc (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional

class UnknownBackendError(ValueError):
    hasher: Any = ...
    backend: Any = ...
    def __init__(self, hasher: Any, backend: Any) -> None: ...

class MissingBackendError(RuntimeError): ...

class PasswordSizeError(ValueError):
    max_size: Any = ...
    def __init__(self, max_size: Any, msg: Optional[Any] = ...) -> None: ...

class PasswordTruncateError(PasswordSizeError):
    def __init__(self, cls: Any, msg: Optional[Any] = ...) -> None: ...

class PasslibSecurityError(RuntimeError): ...

class TokenError(ValueError):
    def __init__(self, msg: Optional[Any] = ..., *args: Any, **kwds: Any) -> None: ...

class MalformedTokenError(TokenError): ...
class InvalidTokenError(TokenError): ...

class UsedTokenError(TokenError):
    expire_time: Any = ...
    def __init__(self, *args: Any, **kwds: Any) -> None: ...

class UnknownHashError(ValueError):
    name: Any = ...
    def __init__(self, name: Any) -> None: ...

class PasslibWarning(UserWarning): ...
class PasslibConfigWarning(PasslibWarning): ...
class PasslibHashWarning(PasslibWarning): ...
class PasslibRuntimeWarning(PasslibWarning): ...
class PasslibSecurityWarning(PasslibWarning): ...

def type_name(value: Any): ...
def ExpectedTypeError(value: Any, expected: Any, param: Any): ...
def ExpectedStringError(value: Any, param: Any): ...
def MissingDigestError(handler: Optional[Any] = ...): ...
def NullPasswordError(handler: Optional[Any] = ...): ...
def InvalidHashError(handler: Optional[Any] = ...): ...
def MalformedHashError(handler: Optional[Any] = ..., reason: Optional[Any] = ...): ...
def ZeroPaddedRoundsError(handler: Optional[Any] = ...): ...
def ChecksumSizeError(handler: Any, raw: bool = ...): ...
