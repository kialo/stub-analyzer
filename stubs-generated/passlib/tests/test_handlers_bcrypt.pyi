# Stubs for passlib.tests.test_handlers_bcrypt (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from passlib.tests.utils import HandlerCase
from typing import Any

log: Any

class _bcrypt_test(HandlerCase):
    handler: Any = ...
    reduce_default_rounds: bool = ...
    fuzz_salts_need_bcrypt_repair: bool = ...
    has_os_crypt_fallback: bool = ...
    known_correct_hashes: Any = ...
    CONFIG_2: Any = ...
    CONFIG_A: Any = ...
    known_correct_configs: Any = ...
    known_unidentified_hashes: Any = ...
    known_malformed_hashes: Any = ...
    platform_crypt_support: Any = ...
    def setUp(self) -> None: ...
    def populate_settings(self, kwds: Any) -> None: ...
    def crypt_supports_variant(self, hash: Any): ...
    fuzz_verifiers: Any = ...
    def fuzz_verifier_bcrypt(self): ...
    def fuzz_verifier_pybcrypt(self): ...
    def fuzz_verifier_bcryptor(self): ...
    class FuzzHashGenerator(HandlerCase.FuzzHashGenerator):
        def generate(self): ...
        def random_rounds(self): ...
    known_incorrect_padding: Any = ...
    def test_90_bcrypt_padding(self) -> None: ...
    def test_needs_update_w_padding(self) -> None: ...

bcrypt_bcrypt_test: Any
bcrypt_pybcrypt_test: Any
bcrypt_bcryptor_test: Any
bcrypt_os_crypt_test: Any
bcrypt_builtin_test: Any

class _bcrypt_sha256_test(HandlerCase):
    handler: Any = ...
    reduce_default_rounds: bool = ...
    forbidden_characters: Any = ...
    fuzz_salts_need_bcrypt_repair: bool = ...
    alt_safe_crypt_handler: Any = ...
    has_os_crypt_fallback: bool = ...
    known_correct_hashes: Any = ...
    known_correct_configs: Any = ...
    known_malformed_hashes: Any = ...
    def setUp(self) -> None: ...
    def populate_settings(self, kwds: Any) -> None: ...
    def test_30_HasManyIdents(self) -> None: ...
    def test_30_HasOneIdent(self) -> None: ...
    class FuzzHashGenerator(HandlerCase.FuzzHashGenerator):
        def random_rounds(self): ...

bcrypt_sha256_bcrypt_test: Any
bcrypt_sha256_pybcrypt_test: Any
bcrypt_sha256_bcryptor_test: Any
bcrypt_sha256_os_crypt_test: Any
bcrypt_sha256_builtin_test: Any
