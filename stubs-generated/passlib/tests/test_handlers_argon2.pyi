# Stubs for passlib.tests.test_handlers_argon2 (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from passlib.tests.utils import HandlerCase
from typing import Any, Optional

log: Any

def hashtest(version: Any, t: Any, logM: Any, p: Any, secret: Any, salt: Any, hex_digest: Any, hash: Any): ...

version: int
reference_data: Any

class _base_argon2_test(HandlerCase):
    handler: Any = ...
    known_correct_hashes: Any = ...
    known_malformed_hashes: Any = ...
    def setUpWarnings(self) -> None: ...
    checksum: Any = ...
    def do_stub_encrypt(self, handler: Optional[Any] = ..., **settings: Any): ...
    def test_03_legacy_hash_workflow(self) -> None: ...
    def test_keyid_parameter(self) -> None: ...
    def test_data_parameter(self) -> None: ...
    def test_keyid_and_data_parameters(self) -> None: ...
    def test_needs_update_w_type(self) -> None: ...
    def test_needs_update_w_version(self) -> None: ...
    def test_argon_byte_encoding(self) -> None: ...
    class FuzzHashGenerator(HandlerCase.FuzzHashGenerator):
        settings_map: Any = ...
        def random_memory_cost(self): ...

class argon2_argon2_cffi_test:
    known_correct_hashes: Any = ...

class argon2_argon2pure_test:
    handler: Any = ...
    known_correct_hashes: Any = ...
    class FuzzHashGenerator(_base_argon2_test.FuzzHashGenerator):
        def random_rounds(self): ...
