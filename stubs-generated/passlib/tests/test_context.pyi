# Stubs for passlib.tests.test_context (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

import passlib.utils.handlers as uh
from passlib.tests.utils import TestCase
from typing import Any, Optional

log: Any
here: Any

def merge_dicts(first: Any, *args: Any, **kwds: Any): ...

class CryptContextTest(TestCase):
    descriptionPrefix: str = ...
    sample_1_schemes: Any = ...
    sample_1_handlers: Any = ...
    sample_1_dict: Any = ...
    sample_1_resolved_dict: Any = ...
    sample_1_unnormalized: Any = ...
    sample_1_unicode: Any = ...
    sample_1_path: Any = ...
    sample_1b_unicode: Any = ...
    sample_1b_path: Any = ...
    sample_1c_bytes: Any = ...
    sample_1c_path: Any = ...
    sample_2_dict: Any = ...
    sample_2_unicode: str = ...
    sample_12_dict: Any = ...
    sample_3_dict: Any = ...
    sample_123_dict: Any = ...
    sample_4_dict: Any = ...
    def setUp(self) -> None: ...
    def test_01_constructor(self) -> None: ...
    def test_02_from_string(self) -> None: ...
    def test_03_from_path(self) -> None: ...
    def test_04_copy(self) -> None: ...
    def test_09_repr(self) -> None: ...
    def test_10_load(self) -> None: ...
    def test_11_load_rollback(self) -> None: ...
    def test_12_update(self) -> None: ...
    def test_20_options(self): ...
    def test_21_schemes(self) -> None: ...
    def test_22_deprecated(self): ...
    def test_23_default(self) -> None: ...
    def test_24_vary_rounds(self): ...
    def assertHandlerDerivedFrom(self, handler: Any, base: Any, msg: Optional[Any] = ...) -> None: ...
    def test_30_schemes(self) -> None: ...
    def test_31_default_scheme(self) -> None: ...
    def test_32_handler(self) -> None: ...
    def test_33_options(self): ...
    def test_34_to_dict(self) -> None: ...
    def test_35_to_string(self) -> None: ...
    nonstring_vectors: Any = ...
    def test_40_basic(self) -> None: ...
    def test_41_genconfig(self) -> None: ...
    def test_42_genhash(self) -> None: ...
    def test_43_hash(self) -> None: ...
    def test_43_hash_legacy(self, use_16_legacy: bool = ...) -> None: ...
    def test_44_identify(self) -> None: ...
    def test_45_verify(self) -> None: ...
    def test_46_needs_update(self): ...
    def test_47_verify_and_update(self) -> None: ...
    def test_48_context_kwds(self) -> None: ...
    def test_50_rounds_limits(self) -> None: ...
    def test_51_linear_vary_rounds(self) -> None: ...
    def test_52_log2_vary_rounds(self) -> None: ...
    def assert_rounds_range(self, context: Any, scheme: Any, lower: Any, upper: Any) -> None: ...
    def test_harden_verify_parsing(self) -> None: ...
    def test_dummy_verify(self) -> None: ...
    def test_61_autodeprecate(self): ...
    def test_disabled_hashes(self) -> None: ...

class DelayHash(uh.StaticHandler):
    name: str = ...
    checksum_chars: Any = ...
    checksum_size: int = ...
    delay: int = ...

class dummy_2(uh.StaticHandler):
    name: str = ...

class LazyCryptContextTest(TestCase):
    descriptionPrefix: str = ...
    def setUp(self) -> None: ...
    def test_kwd_constructor(self) -> None: ...
    def test_callable_constructor(self): ...
