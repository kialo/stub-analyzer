# Stubs for passlib.utils.binary (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional

BASE64_CHARS: Any
AB64_CHARS: Any
HASH64_CHARS: Any
BCRYPT_CHARS: Any
PADDED_BASE64_CHARS: Any
HEX_CHARS: Any
UPPER_HEX_CHARS: Any
LOWER_HEX_CHARS: Any
ALL_BYTE_VALUES: Any

def compile_byte_translation(mapping: Any, source: Optional[Any] = ...): ...
def b64s_encode(data: Any): ...
def b64s_decode(data: Any): ...
def ab64_encode(data: Any): ...
def ab64_decode(data: Any): ...
def b32encode(source: Any): ...
def b32decode(source: Any): ...

class Base64Engine:
    bytemap: Any = ...
    big: Any = ...
    def __init__(self, charmap: Any, big: bool = ...) -> None: ...
    @property
    def charmap(self): ...
    def encode_bytes(self, source: Any): ...
    def decode_bytes(self, source: Any): ...
    def check_repair_unused(self, source: Any): ...
    def repair_unused(self, source: Any): ...
    def encode_transposed_bytes(self, source: Any, offsets: Any): ...
    def decode_transposed_bytes(self, source: Any, offsets: Any): ...
    def decode_int6(self, source: Any): ...
    def decode_int12(self, source: Any): ...
    def decode_int24(self, source: Any): ...
    def decode_int30(self, source: Any): ...
    def decode_int64(self, source: Any): ...
    def encode_int6(self, value: Any): ...
    def encode_int12(self, value: Any): ...
    def encode_int24(self, value: Any): ...
    def encode_int30(self, value: Any): ...
    def encode_int64(self, value: Any): ...

class LazyBase64Engine(Base64Engine):
    def __init__(self, *args: Any, **kwds: Any) -> None: ...
    def __getattribute__(self, attr: Any): ...

h64: Any
h64big: Any
bcrypt64: Any
