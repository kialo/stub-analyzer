# Stubs for passlib.handlers.bcrypt (Python 3.6)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any

from passlib.utils import handlers as uh

class _BcryptCommon(uh.SubclassBackendMixin, uh.TruncateMixin, uh.HasManyIdents, uh.HasRounds, uh.HasSalt, uh.GenericHandler):
    name = ...  # type: str
    setting_kwds = ...  # type: Any
    checksum_size = ...  # type: int
    checksum_chars = ...  # type: Any
    default_ident = ...  # type: Any
    ident_values = ...  # type: Any
    ident_aliases = ...  # type: Any
    min_salt_size = ...  # type: int
    max_salt_size = ...  # type: int
    salt_chars = ...  # type: Any
    default_rounds = ...  # type: int
    min_rounds = ...  # type: int
    max_rounds = ...  # type: int
    rounds_cost = ...  # type: str
    truncate_size = ...  # type: int
    def to_string(self) -> Any: ...
    @classmethod
    def normhash(cls, hash: Any) -> Any: ...

class _NoBackend(_BcryptCommon): ...
class _BcryptBackend(_BcryptCommon): ...
class _BcryptorBackend(_BcryptCommon): ...
class _PyBcryptBackend(_BcryptCommon): ...
class _OsCryptBackend(_BcryptCommon): ...
class _BuiltinBackend(_BcryptCommon): ...

class bcrypt(_NoBackend, _BcryptCommon):
    backends = ...  # type: Any

class _wrapped_bcrypt(bcrypt):
    setting_kwds = ...  # type: Any
    truncate_size = ...  # type: Any

class bcrypt_sha256(_wrapped_bcrypt):
    name = ...  # type: str
    ident_values = ...  # type: Any
    ident_aliases = ...  # type: Any
    default_ident = ...  # type: Any
    prefix = ...  # type: Any
    @classmethod
    def identify(cls, hash: Any) -> Any: ...
    def to_string(self) -> Any: ...
